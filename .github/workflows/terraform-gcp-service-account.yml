name: Terraform GCP Service Account Pipeline

on:
  push:
    branches:
      - terraform
  pull_request:
    branches:
      - terraform

env:
  TF_VERSION: "1.8.5"  # Latest stable Terraform version as of Feb 2025
  GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: ${{ secrets.REGION }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # For OIDC authentication with GCP

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # Authenticate with GCP using OIDC (recommended for security)
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.GOOGLE_CREDENTIALS }}
          project_id: ${{ env.PROJECT_ID }}

      # Configure Terraform variables
      - name: Set Terraform variables
        run: |
          echo "project_id = \"${{ env.PROJECT_ID }}\"" >> terraform/terraform.tfvars
          echo "region = \"${{ env.REGION }}\"" >> terraform/terraform.tfvars

      # Initialize Terraform
      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      # Terraform Plan (for pull requests or validation)
      - name: Terraform Plan
        if: github.event_name == 'push'
        working-directory: terraform
        run: terraform plan -out=tfplan

      # Terraform Apply (for pushes to main)
      - name: Terraform Apply
        if: github.event_name == 'pull_request'
        working-directory: terraform
        run: terraform apply -auto-approve tfplan

      # Output results (optional)
      - name: Output Terraform Results
        if: github.event_name == 'push'
        working-directory: terraform
        run: terraform output
